class Solution:
    def uniquePathsWithObstacles(self, obstacleGrid: List[List[int]]) -> int:
        if len(obstacleGrid) == 0 or not obstacleGrid:
            return 0
            
        m = len(obstacleGrid) #行
        n = len(obstacleGrid[0]) #列

        if m==0 or n==0:
            return 0
        
        index_tab = [[0 for i in range(n)] for j in range(m)]

        for i in range(m):
            if obstacleGrid[i][0]==1:
                break
            index_tab[i][0] = 1
            
        for i in range(n):
            if obstacleGrid[0][i]==1:
                break
            index_tab[0][i] = 1

        for i in range(1,m):
            for j in range(1,n):
                if obstacleGrid[i][j]==0:
                    index_tab[i][j] = index_tab[i-1][j]+index_tab[i][j-1]

        return index_tab[-1][-1]
